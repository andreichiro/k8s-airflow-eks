apiVersion: apps/v1
kind: Deployment
metadata:
  name: worker
  labels:
    role: worker
    {{- include "app.labels" . | nindent 4 }}
  {{- if .Values.worker.deploymentAnnotations }}
  annotations:
    {{- toYaml .Values.worker.deploymentAnnotations | nindent 4 }}
  {{- end }}
spec:
  {{- if not .Values.worker.autoscaling.enabled }}
  replicas: {{ default .Values.worker.replicas .Values.worker.count | required "A valid number of worker replicas is required!" }}
  {{- end }}
  selector:
    matchLabels:
      role: worker
      {{- include "app.selectorLabels" . | nindent 6 }}
  strategy:
    type: Recreate
  template:
    metadata:
      labels:
        role: worker
        {{- include "app.labels" . | nindent 8 }}
      annotations:
        {{- include "starburst.worker-checksums" . | nindent 8 }}
        {{- include "starburst.config-checksums" . | nindent 8 }}
      {{- if .Values.worker.podAnnotations }}
        {{- toYaml .Values.worker.podAnnotations | nindent 8 }}
      {{- end }}
    spec:
      {{- if .Values.serviceAccountName }}
      serviceAccountName: {{ .Values.serviceAccountName }}
      {{- end }}
      terminationGracePeriodSeconds: {{ .Values.worker.deploymentTerminationGracePeriodSeconds }}
      {{- include "app.imagePullSecretName" . | nindent 6 }}
      initContainers:
        - name: starburst-enterprise-init
          image: "{{ .Values.initImage.repository }}:{{ .Values.initImage.tag }}"
          imagePullPolicy: {{ .Values.initImage.pullPolicy }}
          {{- with .Values.worker.resources }}
          resources:
            {{- include "app.resources" . | nindent 12 }}
          {{- end }}
          env:
            - name: POD_IP
              valueFrom:
                fieldRef:
                  fieldPath: status.podIP
            - name: POD_NAMESPACE
              valueFrom:
                fieldRef:
                  fieldPath: metadata.namespace
          volumeMounts:
            - name: starburst-config
              mountPath: /work-dir
            - name: starburst-config-updated
              mountPath: /etc/starburst
            {{- if .Values.starburstPlatformLicense }}
            - name: starburst-license-json
              mountPath: /starburst-license-json
            {{- end }}
          command:
            - starburst-conf-cli
            - generate
            - --values-yaml
            - /work-dir/values.yaml
            - --config-type
            - WORKER
            - --starburst-config-dir
            - /etc/starburst
            - --starburst-license-dir
            - /starburst-license-json
            - --ip
            - $(POD_IP)
            - --k8s-namespace
            - $(POD_NAMESPACE)
            - --chart-version
            - {{ .Chart.Version }}
          {{- if .Values.starburstEnterpriseInit.securityContext }}
          securityContext:
            {{- toYaml .Values.starburstEnterpriseInit.securityContext | nindent 12 }}
          {{- end }}
        {{- if and .Values.warpSpeed.enabled .Values.warpSpeed.autoConfigure }}
        - name: warp-speed-host-init
          image: "{{ .Values.warpSpeed.image.repository }}:{{ .Values.warpSpeed.image.tag }}"
          imagePullPolicy: {{ .Values.warpSpeed.image.pullPolicy }}
          securityContext:
            privileged: true
          env:
            - name: LOCAL_STORAGE_MOUNT_PATH
              value: {{ .Values.warpSpeed.fileSystem.localStorageMountPath }}
            {{- if .Values.warpSpeed.fileSystem.diskFilterStringList }}
            - name: USER_DISK_FILTERS
              value: {{ join "," .Values.warpSpeed.fileSystem.diskFilterStringList }}
            {{- end }}
          volumeMounts:
            - name: host-proc
              mountPath: /host/proc
        {{- end }}
        {{- if .Values.worker.initContainers }}
        {{- include "starburst.process.container" ( dict "value" .Values.worker.initContainers "context" . ) | nindent 8 -}}
        {{- end }}
      containers:
        - name: worker
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          {{- if .Values.worker.command }}
          command:
            {{- range .Values.worker.command }}
              - "{{ . }}"
            {{- end }}
          {{- end }}
          {{- if .Values.initFile }}
          command: [ "/bin/bash" ]
          args:
            - "/initFile"
            - "worker"
            {{- range .Values.extraArguments }}
            - "{{ . }}"
            {{- end}}
          {{- end }}
          startupProbe:
          {{- if .Values.startupProbe }}
          {{- toYaml .Values.startupProbe | nindent 12 }}
          {{- else }}
          {{- include "starburst.startup.probe" . | nindent 12 }}
          {{- end }}
          readinessProbe:
          {{- if .Values.readinessProbe }}
          {{- toYaml .Values.readinessProbe | nindent 12 }}
          {{- else }}
          {{- include "starburst.readiness.probe" . | nindent 12 }}
          {{- end }}
          livenessProbe:
          {{- if .Values.livenessProbe }}
          {{- toYaml .Values.livenessProbe | nindent 12 }}
          {{- else }}
          {{- include "starburst.liveness.probe" . | nindent 12 }}
          {{- end }}
          envFrom:
          {{- with .Values.worker.envFrom -}}
          {{- toYaml . | nindent 12 -}}
          {{- end -}}
          {{- include "helperFunction.secretEnv.worker" . | nindent 12 }}
          env:
            {{- if ( .Values.gcpSepLicenseVerifier | default dict ).enabled }}
            {{- tpl (.Files.Get "files/gcp-mp/k8s-license-provider-env-vars.yaml") . | nindent 12 }}
            {{- end }}
            {{- if ( .Values.awsSepLicenseVerifier | default dict ).enabled }}
            {{- tpl (.Files.Get "files/aws-mp/k8s-license-provider-env-vars.yaml") . | nindent 12 }}
            {{- end }}
            - name: POD_ID
              valueFrom:
                fieldRef:
                  fieldPath: metadata.uid
            - name: POD_IP
              valueFrom:
                fieldRef:
                  fieldPath: status.podIP
            - name: POD_NAMESPACE
              valueFrom:
                fieldRef:
                  fieldPath: metadata.namespace
            - name: NODE_IP
              valueFrom:
                fieldRef:
                  fieldPath: status.hostIP
          ports:
            - containerPort: {{ .Values.internal.ports.http.port }}
            - containerPort: {{ .Values.internal.ports.https.port }}
          {{- range $key, $value := .Values.worker.additionalExposedPorts }}
            - containerPort: {{ $value.port }}
          {{- end }}
          volumeMounts:
            {{- if .Values.initFile }}
            - name: init-file
              mountPath: /initFile
              subPath: initFile
              readOnly: true
            {{- end }}
            {{- if .Values.extraSecret.name }}
            - name: extra-secret
              mountPath: /extra-secret/
              readOnly: true
            {{- end }}
            - name: starburst-config-updated
              mountPath: /etc/starburst
            {{- if .Values.starburstPlatformLicense }}
            - name: starburst-license-json
              mountPath: /starburst-license-json
            {{- end }}
            {{- include "helperFunction.secretRef.volumesMounts.worker" . | nindent 12 -}}
            {{- if .Values.spilling.enabled }}
            - name: disk-spilling-volume
              mountPath: /data/starburst/disk-spill
            {{- end -}}
            {{- if .Values.cache.enabled }}
            - name: cache-volume
              mountPath: /data/starburst/cache
            {{- end -}}
            {{- if .Values.prometheus.enabled }}
            - name: prometheus-volume
              mountPath: /etc/starburst/telemetry
            {{- end }}
            {{- include "app.volumeMounts" . | nindent 12 }}
            {{- if .Values.warpSpeed.enabled }}
            - name: warp-speed-storage
              mountPath: /opt/data
            {{- end }}
          {{- with .Values.worker.resources }}
          resources:
            {{- include "app.resources" . | nindent 12 }}
          {{- end }}
          terminationMessagePolicy: FallbackToLogsOnError
          {{- if .Values.worker.securityContext }}
          securityContext:
            {{- toYaml .Values.worker.securityContext | nindent 12 }}
          {{- end }}
        {{- if ( .Values.gcpSepLicenseVerifier | default dict ).enabled }}
        {{- tpl (.Files.Get "files/gcp-mp/ubbagent-container.yaml") . | nindent 8 }}
        {{- tpl (.Files.Get "files/gcp-mp/gcp-license-verifier-container.yaml") . | nindent 8 }}
        {{- end }}
        {{- if ( .Values.awsSepLicenseVerifier | default dict ).enabled }}
        {{- tpl (.Files.Get "files/aws-mp/aws-license-verifier-container.yaml") . | nindent 8 }}
        {{- end }}
        {{- if .Values.worker.sidecars }}
        {{- include "starburst.process.container" ( dict "value" .Values.worker.sidecars "context" . ) | nindent 8 -}}
        {{- end }}
      volumes:
        {{- if .Values.initFile }}
        - name: init-file
          secret:
            secretName: {{ template "app.init-file-secret.name" . }}
        {{- end }}
        {{- if .Values.extraSecret.name }}
        - name: extra-secret
          secret:
            secretName: "{{ .Values.extraSecret.name }}"
        {{- end }}
        - name: starburst-config
          secret:
            secretName: values-yaml-secret
        {{- if .Values.starburstPlatformLicense }}
        - name: starburst-license-json
          secret:
            secretName: {{ .Values.starburstPlatformLicense }}
        {{- end }}
        - name: starburst-config-updated
          emptyDir: {}
        {{- include "helperFunction.secretRef.volumes.worker" . | nindent 8 -}}
        {{- if .Values.spilling.enabled }}
        - name: disk-spilling-volume
          {{- toYaml .Values.spilling.volume | nindent 10 -}}
        {{- end -}}
        {{- if .Values.cache.enabled }}
        - name: cache-volume
          {{- toYaml .Values.cache.volume | nindent 10 -}}
        {{- end -}}
        {{- if .Values.prometheus.enabled }}
        - name: prometheus-volume
          configMap:
            name: starburst-worker-p8s
        {{- end }}
        {{- if ( .Values.gcpSepLicenseVerifier | default dict ).enabled }}
        {{- tpl (.Files.Get "files/gcp-mp/volumes.yaml") . | nindent 8 }}
        {{- end }}
        {{- include "app.volumes" . | nindent 8 }}
        {{- if .Values.warpSpeed.enabled }}
        - name: warp-speed-storage
          hostPath:
            path: {{ .Values.warpSpeed.fileSystem.localStorageMountPath }}
            type: DirectoryOrCreate
        - name: host-proc
          hostPath:
            path: /proc
            type: Directory
        {{- end }}
      {{- with .Values.worker.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.worker.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.worker.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.worker.priorityClassName }}
      priorityClassName:
        {{ toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.securityContext }}
      securityContext:
        {{- toYaml . | nindent 8 }}
      {{- end }}
