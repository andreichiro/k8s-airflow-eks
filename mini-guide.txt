efs id:
fs-074b0526db14cdee8

cluster name:
aws eks --region us-east-1 update-kubeconfig --name h2-lakehouse-on-k8s-eks
aws eks --region us-east-1 update-kubeconfig --name h2-lakehouse-on-k8s-eks

eksclt create cluster -f config/cluster.yaml

helm install argocd -n argocd argo/argo-cd --set redis-ha.enabled=true --set controller.replicas=1 --set server.autoscaling.enabled=true --set server.autoscaling.minReplicas=1 --set repoServer.autoscaling.enabled=true --set repoServer.autoscaling.minReplicas=1 --set applicationSet.replicaCount=1 --set server.service.type=LoadBalancer --create-namespace

base64 -> Y1JuYlNBUVFPaENod2xrTg==
ifhETd3HAxSkdKcF

aws eks --region us-east-1 update-kubeconfig --name h2-lakehouse-on-k8s-eks

kubectl apply -f argoCD\deployment.yaml                                                                                      

kubectl autoscale statefulset airflow-worker -n airflow --cpu-percent=80 --min=1 --max=10

Invoke-WebRequest -Uri "https://api.cast.ai/v1/agent.yaml?provider=eks" -Headers @{"Authorization"="Token 76ad6b740a6c2ea356be418a321560a750e1bac89fda4ae8117e6c8bdd837028"} | Select-Object -ExpandProperty Content | kubectl apply -f -


curl -H "Authorization: Token aaea4d9c021c2beee293f6d86eb83516614a54ce1df365ffe2347e3a36374da8" "https://api.cast.ai/v1/agent.yaml?provider=eks" | kubectl apply -f -

$response = Invoke-WebRequest -Uri "https://api.cast.ai/v1/agent.yaml?provider=eks" -Headers @{"Authorization"="Token 48d42b967cf74c3f309bf9747f95579fe7fa72617336e01023783d7f646bb7bb"} -UseBasicParsing


choco install jq -y

choco install curl -y

cast.AI
kubectl apply -f https://github.com/kubernetes-sigs/metrics-server/releases/latest/download/components.yaml

GitBash


48d42b967cf74c3f309bf9747f95579fe7fa72617336e01023783d7f646bb7bb
curl -H "Authorization: Token 48d42b967cf74c3f309bf9747f95579fe7fa72617336e01023783d7f646bb7bb" "https://api.cast.ai/v1/agent.yaml?provider=eks"


CASTAI_API_TOKEN=917a3c194a804c2bfe50339bd5fe38592a8cf00d88f2843fc91c0519948d1a76 CASTAI_CLUSTER_ID=4590a7dc-a6a9-47ce-a18e-2c402f4e4282 CLUSTER_NAME=h2-lakehouse-on-k8s-eks REGION=us-east-1 USER_ARN=arn:aws:iam::809060229965:user/cast-crossrole-4590a7dc-a6a9-47ce-a18e-2c402f4e4282 /bin/bash -c "$(curl -fsSL 'https://api.cast.ai/v1/scripts/eks/onboarding.sh')"


CASTAI_API_TOKEN=917a3c194a804c2bfe50339bd5fe38592a8cf00d88f2843fc91c0519948d1a76 CASTAI_CLUSTER_ID=4590a7dc-a6a9-47ce-a18e-2c402f4e4282 CLUSTER_NAME=h2-lakehouse-on-k8s-eks REGION=us-east-1 USER_ARN=arn:aws:iam::809060229965:user/cast-crossrole-4590a7dc-a6a9-47ce-a18e-2c402f4e4282 /bin/bash -c "$(curl -fsSL 'https://api.cast.ai/v1/scripts/eks/onboarding.sh')"

CASTAI_API_TOKEN=eb44503ae775bc327aaf7465de07b0a7fbaa287d29d639f54322265d2129f122 CASTAI_CLUSTER_ID=4590a7dc-a6a9-47ce-a18e-2c402f4e4282 CLUSTER_NAME=h2-lakehouse-on-k8s-eks INSTALL_KVISOR=true REGION=us-east-1 USER_ARN=arn:aws:iam::809060229965:user/cast-crossrole-4590a7dc-a6a9-47ce-a18e-2c402f4e4282 /bin/bash -c "$(curl -fsSL 'https://api.cast.ai/v1/scripts/eks/onboarding.sh')"

CASTAI_API_TOKEN=eb44503ae775bc327aaf7465de07b0a7fbaa287d29d639f54322265d2129f122 CASTAI_CLUSTER_ID=4590a7dc-a6a9-47ce-a18e-2c402f4e4282 /bin/bash -c "$(curl -fsSL 'https://api.cast.ai/v1/scripts/egressd/install.sh')"

kubectl create secret generic airflow-redis-secret --from-literal=password='dados123456' -n airflow               
kubectl create secret generic airflow-redis-secret --from-literal=password='Mzc5LzA=' -n airflow               

kubectl create secret generic broker-secret --from-literal=connection='redis://:dados123456@airflow-redis.airflow.svc.cluster.local:6379/0' -n airflow


redis:
  existingSecret: "airflow-redis-password"



kubectl port-forward svc/airflow-webserver 8080:8080 -n airflow

------------

kubectl create namespace starburst-enterprise
            
eksctl create iamserviceaccount --name starburst-enterprise-sa --namespace starburst-enterprise --cluster h2-lakehouse-on-k8s-eks --attach-policy-arn arn:aws:iam::aws:policy/AWSMarketplaceMeteringFullAccess --attach-policy-arn arn:aws:iam::aws:policy/AWSMarketplaceMeteringRegisterUsage --attach-policy-arn arn:aws:iam::aws:policy/service-role/AWSLicenseManagerConsumptionPolicy --approve

export HELM_EXPERIMENTAL_OCI=1

aws ecr get-login-password --region us-east-1 | helm registry login --username AWS --password-stdin 709825985650.dkr.ecr.us-east-1.amazonaws.com

mkdir awsmp-chart && cd awsmp-chart

helm pull oci://709825985650.dkr.ecr.us-east-1.amazonaws.com/starburst/starburst-enterprise-helm-chart-paygo --version 423.6.0-aws.108

tar xf $(pwd)/* && find $(pwd) -maxdepth 1 -type f -delete

helm install starburst-enterprise --namespace starburst-enterprise ./* 



