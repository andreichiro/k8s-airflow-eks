efs id:
fs-074b0526db14cdee8

cluster name:
aws eks --region us-east-1 update-kubeconfig --name h2-lakehouse-on-k8s-eks
aws eks --region us-east-1 update-kubeconfig --name h2-lakehouse-on-k8s-eks

eksclt create cluster -f config/cluster.yaml

helm install argocd -n argocd argo/argo-cd --set redis-ha.enabled=true --set controller.replicas=1 --set server.autoscaling.enabled=true --set server.autoscaling.minReplicas=1 --set repoServer.autoscaling.enabled=true --set repoServer.autoscaling.minReplicas=1 --set applicationSet.replicaCount=1 --set server.service.type=LoadBalancer --create-namespace

base64 -> RU9RVTB0MjBlN21KeFhBWg====
EOQU0t20e7mJxXAZ
aws eks --region us-east-1 update-kubeconfig --name h2-lakehouse-on-k8s-eks

kubectl apply -f argoCD\deployment.yaml                                                                                      

Invoke-WebRequest -Uri "https://api.cast.ai/v1/agent.yaml?provider=eks" -Headers @{"Authorization"="Token df7258192d818dc9a92403d6ff0d47f3fad1786fb500763fb0907c506149adbe"} | Select-Object -ExpandProperty Content | kubectl apply -f -

choco install jq -y

choco install curl -y

cast.AI
kubectl apply -f https://github.com/kubernetes-sigs/metrics-server/releases/latest/download/components.yaml

GitBash

CASTAI_API_TOKEN=e968dd2b82662bb128b81d32f4e53ac8d38f4d8866bea3229a7307b802fb9b7b CASTAI_CLUSTER_ID=4590a7dc-a6a9-47ce-a18e-2c402f4e4282 CLUSTER_NAME=h2-lakehouse-on-k8s-eks INSTALL_KVISOR=true REGION=us-east-1 USER_ARN=arn:aws:iam::809060229965:user/cast-crossrole-4590a7dc-a6a9-47ce-a18e-2c402f4e4282 /bin/bash -c "$(curl -fsSL 'https://api.cast.ai/v1/scripts/eks/onboarding.sh')"
CASTAI_API_TOKEN=1340a4b94fc0430279594a09a73f24f779f7785b071fe670eae18a5fd4871758 CASTAI_CLUSTER_ID=4590a7dc-a6a9-47ce-a18e-2c402f4e4282 /bin/bash -c "$(curl -fsSL 'https://api.cast.ai/v1/scripts/egressd/install.sh')"

kubectl create secret generic airflow-redis-secret --from-literal=password='dados123456' -n airflow               
kubectl create secret generic broker-secret --from-literal=password='dados123456' -n airflow

redis:
  existingSecret: "airflow-redis-password"

kubectl port-forward svc/airflow-webserver 8080:8080 -n airflow


